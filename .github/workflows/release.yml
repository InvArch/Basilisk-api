name: Release

on:
  push:
    branches: [ main ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  GCP_IDENTITY_PROVIDER_ID: ${{ secrets.GCP_IDENTITY_PROVIDER_ID }}
  GCP_REGION: europe-west3
  GCP_REPOSITORY: hydradx-api
  GCP_SERVICE: hydradx-api-app

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up npm
        run: npm install
      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{env.GCP_IDENTITY_PROVIDER_ID}}
          service_account: ${{env.GCP_SERVICE_ACCOUNT}}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Set up Docker
        run: gcloud auth configure-docker europe-west3-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY }}/${{ env.GCP_SERVICE }}:latest" ./
          docker push "${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY }}/${{ env.GCP_SERVICE }}:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: 'env.GCP_SERVICE'
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY }}/${{ env.GCP_SERVICE }}:${{ github.sha }}

      - name: 'Print output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
